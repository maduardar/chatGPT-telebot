from telegram import Update
from telegram.ext import ContextTypes
import time
from db.MySqlConn import Mysql

from config import (
    reply_markup,
    cancel_markup,
    context_count,
    CHOOSING,
    TYPING_SYS_CONTENT)


async def set_system_content(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id
    mysql = Mysql()
    user = mysql.getOne("select * from users where user_id=%s", user_id)
    mysql.end()
    system_content = user.get(
        "system_content") if user else 'You are an AI assistant that helps people find information.'
    await update.message.reply_text(text=f"""
–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ai-–ø–æ–º–æ—â–Ω–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–∞–∫ü§ñÔºö

**{system_content}**

–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏: ¬´–û—Ç–º–µ–Ω–∞¬ª –∏–ª–∏ ¬´–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è¬ª ‚Äçü§ù‚Äç
    """, parse_mode='Markdown', disable_web_page_preview=True, reply_markup=cancel_markup)
    return TYPING_SYS_CONTENT


async def reset_context(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id
    mysql = Mysql()
    reset_at = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
    mysql.update("update records set reset_at=%s where user_id=%s and reset_at is null", (reset_at, user_id))
    user = mysql.getOne(f"select * from users where user_id={user_id}")
    mysql.end()
    await update.message.reply_text(f"""
–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–¥–∞–µ—à—å –≤–æ–ø—Ä–æ—Å, –≥–ø—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Ç–≤–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º {context_count[user['level']]} —Å–æ–æ–±—â–µ–Ω–∏—è–º,
 —á—Ç–æ–±—ã –¥–∞—Ç—å –æ—Ç–≤–µ—Ç!

–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –≤–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –æ—á–∏—â–µ–Ω–∞, –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è —Å–Ω–æ–≤–∞ –Ω–∞—á–∞—Ç—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã!
    """, parse_mode="Markdown", disable_web_page_preview=True)
    return CHOOSING


async def set_system_content_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    system_content = update.message.text.strip()
    if system_content in ("–û—Ç–º–µ–Ω–∞", "–û—Ç–º–µ–Ω–∏—Ç—å", "üö´–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è", "üö´–û—Ç–º–µ–Ω–∏—Ç—å", "–°–±—Ä–æ—Å–∏—Ç—å", "–ó–∞–±—ã—Ç—å"):
        await update.message.reply_text(text="–û—Ç–º–µ–Ω–µ–Ω–æ.\n–ú–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∑–∞–¥–∞–≤–∞—Ç—å –º–Ω–µ –≤–æ–ø—Ä–æ—Å—ã",
                                        reply_markup=reply_markup, parse_mode='Markdown')
    else:
        user_id = update.effective_user.id
        mysql = Mysql()
        mysql.update("update users set system_content=%s where user_id=%s", (system_content, user_id))
        reset_at = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
        mysql.update("update records set reset_at=%s where user_id=%s and reset_at is null", (reset_at, user_id))
        mysql.end()
        await update.message.reply_text(text=f"""
–õ–∏—á–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.
–Ø –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –º–æ–µ–π –Ω–æ–≤–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏.
–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã!
        """, reply_markup=reply_markup, parse_mode='Markdown')
    return CHOOSING
